{"version":3,"sources":["components/Stats.js","components/Stopwatch.js","components/Header.js","components/Counter.js","components/Icon.js","components/Player.js","components/AddPlayer.js","components/App.js","index.js"],"names":["Stats","players","totalPlayers","length","totalPoints","reduce","total","player","score","className","PropTypes","arrayOf","shape","number","Stopwatch","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","prevState","handleStopWatch","handleReset","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","title","string","object","defaultProps","Counter","index","changeScore","Icon","props","viewBox","isHighScore","d","transform","width","height","Player","name","id","removePlayer","PureComponent","AddPlayer","value","playerInput","React","createRef","handleValueChange","e","target","handleSubmit","preventDefault","current","currentTarget","reset","console","log","onSubmit","type","ref","placeholder","App","prevPlayerID","getHighScore","scores","map","p","highScore","max","handleScoreChange","delta","handleAddPlayer","handleRemovePlayer","filter","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf0d4377.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Stats = ({players}) => {\r\n\r\n    const totalPlayers = players.length;\r\n    const totalPoints = players.reduce( (total, player) => {\r\n        return total + player.score;    \r\n    }, 0);\r\n\r\n    return (\r\n        <table className=\"stats\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>Players:</td>\r\n                    <td>{totalPlayers}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Total Points:</td>\r\n                    <td>{totalPoints}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nStats.PropTypes = {\r\n    players: PropTypes.arrayOf(PropTypes.shape({\r\n        score: PropTypes.number\r\n    }))\r\n};\r\n\r\nexport default Stats;","import React, {Component} from 'react';\r\n\r\nclass Stopwatch extends Component {\r\n\r\n    state = {\r\n        isRunning: false,\r\n        elapsedTime: 0,\r\n        previousTime: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.intervalID = setInterval(() => this.tick(), 100);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    tick = () => {\r\n        if (this.state.isRunning) {\r\n            const now = Date.now();\r\n            this.setState( prevState => ({\r\n                previousTime: now,\r\n                elapsedTime: prevState.elapsedTime + (now - this.state.previousTime)\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleStopWatch = () => {\r\n        this.setState( prevState => ({\r\n            isRunning: !prevState.isRunning\r\n        }));\r\n        if (!this.state.isRunning) {\r\n            this.setState({previousTime: Date.now()})\r\n        }\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({elapsedTime: 0});\r\n    }\r\n\r\n    render() {\r\n        const seconds = Math.floor(this.state.elapsedTime/1000);\r\n        return (\r\n            <div className=\"stopwatch\">\r\n                <h2>Stopwatch</h2>\r\n                <span className=\"stopwatch-time\">{seconds}</span>\r\n                <button onClick={this.handleStopWatch}>\r\n                    {this.state.isRunning ? 'Stop' : 'Start'}\r\n                </button>\r\n                <button onClick={this.handleReset}>Reset</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stopwatch;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Stats from './Stats';\r\nimport Stopwatch from './Stopwatch';\r\n\r\nconst Header = ({players, title}) => {\r\n    return (\r\n        <header>\r\n            <Stats players={players} />\r\n            <h1>{title} </h1>\r\n            <Stopwatch/>\r\n        </header>\r\n    );\r\n}\r\n\r\nHeader.PropTypes = {\r\n    title: PropTypes.string,\r\n    players: PropTypes.arrayOf(PropTypes.object)\r\n};\r\n\r\nHeader.defaultProps = {\r\n    title: 'Scoreboard'\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Counter = ({index, score, changeScore}) => {\r\n\r\n    return (\r\n        <div className=\"counter\">\r\n            <button className=\"counter-action decrement\" onClick={() => changeScore(index, -1)}> - </button>\r\n            <span className=\"counter-score\">{score}</span>\r\n            <button className=\"counter-action increment\" onClick={() => changeScore(index, 1)}> + </button>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nCounter.propTypes = {\r\n    index: PropTypes.number,\r\n    score: PropTypes.number,\r\n    changeScore: PropTypes.func\r\n};\r\n\r\nexport default Counter;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Icon = (props) =>\r\n  <svg viewBox=\"0 0 44 35\" className={ props.isHighScore ? 'is-high-score' : null }>\r\n    <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\r\n    <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\r\n  </svg>;\r\n\r\nIcon.propTypes = {\r\n  isHighScore: PropTypes.bool\r\n};\r\n\r\nexport default Icon;","import React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Counter from './Counter';\r\nimport Icon from './Icon';\r\n\r\nclass Player extends PureComponent {\r\n    \r\n    static propTypes = {\r\n        changeScore: PropTypes.func.isRequired,\r\n        removePlayer: PropTypes.func.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        score: PropTypes.number.isRequired,\r\n        id: PropTypes.number.isRequired,\r\n        index: PropTypes.number.isRequired,\r\n        isHighScore: PropTypes.bool\r\n    };\r\n\r\n    render() {\r\n\r\n        const {\r\n            name,\r\n            id,\r\n            score,\r\n            index,\r\n            removePlayer,\r\n            changeScore\r\n        } = this.props;\r\n\r\n       return (\r\n            <div className=\"player\">\r\n                <span className=\"player-name\">\r\n                    <button className=\"remove-player\" onClick={ () => removePlayer(id) }>✖</button>\r\n\r\n                    <Icon isHighScore={this.props.isHighScore} />\r\n                    { name }\r\n                </span>\r\n\r\n                <Counter \r\n                    score={score} \r\n                    index={index}\r\n                    changeScore={changeScore}\r\n                />\r\n\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default Player;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddPlayer extends Component {\r\n    \r\n    static propTypes = {\r\n        addPlayer: PropTypes.func\r\n      };\r\n\r\n    state = {\r\n        value: ''\r\n    };\r\n\r\n    playerInput = React.createRef();\r\n\r\n    handleValueChange = (e) => {\r\n        this.setState({value: e.target.value});\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.AddPlayer(this.playerInput.current.value);\r\n        e.currentTarget.reset();\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.value)\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    ref={this.playerInput}\r\n                    placeholder=\"Enter a player's name...\"\r\n                />\r\n                    \r\n                <input\r\n                   type=\"submit\"\r\n                   value=\"Add Player\" \r\n                />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddPlayer;","import React, {Component} from 'react';\r\nimport Header from './Header';\r\nimport Player from './Player';\r\nimport AddPlayer from './AddPlayer';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        players: [\r\n            {\r\n                name: \"Player 1\",\r\n                score: 0,\r\n                id: 1\r\n            },\r\n            {\r\n                name: \"Player 2\",\r\n                score: 0,\r\n                id: 2\r\n            },\r\n            {\r\n                name: \"Player 3\",\r\n                score: 0,\r\n                id: 3\r\n            },\r\n            {\r\n                name: \"Player 4\",\r\n                score: 0,\r\n                id: 4\r\n            }\r\n        ]\r\n    };\r\n\r\n    prevPlayerID = 4;\r\n\r\n    getHighScore = () => {\r\n        const scores = this.state.players.map( p => p.score );\r\n        const highScore = Math.max(...scores);\r\n        if (highScore) {\r\n          return highScore;\r\n        } \r\n        return null;\r\n      }\r\n\r\n    handleScoreChange = (index, delta) => {\r\n        this.setState( prevState => ({\r\n            score: prevState.players[index].score += delta\r\n        }));\r\n    }\r\n\r\n    handleAddPlayer = (name) => {\r\n        this.setState(prevState => {\r\n            return {\r\n                players: [\r\n                    ...prevState.players,\r\n                    {\r\n                        name,\r\n                        score: 0,\r\n                        id: this.prevPlayerID += 1\r\n                    }\r\n                ]\r\n            };\r\n        });\r\n    }\r\n\r\n    handleRemovePlayer = (id) => {\r\n        this.setState( prevState => {\r\n            return {\r\n                players: prevState.players.filter(p => p.id !== id )\r\n            };\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const highScore = this.getHighScore();\r\n\r\n        return (\r\n            \r\n            <div className=\"scoreboard\">\r\n                <Header players={this.state.players}/>\r\n\r\n                {this.state.players.map( (player, index) =>\r\n                    <Player \r\n                        name={player.name}\r\n                        score={player.score}\r\n                        id={player.id}\r\n                        score={player.score}\r\n                        key={player.id.toString()}\r\n                        index={index}\r\n                        changeScore={this.handleScoreChange}\r\n                        removePlayer={this.handleRemovePlayer}\r\n                        isHighScore={highScore === player.score}\r\n                    />\r\n                )}\r\n\r\n                <AddPlayer AddPlayer={this.handleAddPlayer}/>\r\n            </div>\r\n        );\r\n    } \r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}